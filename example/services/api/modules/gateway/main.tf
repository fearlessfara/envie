# API Gateway Module - Lightweight Version
# Uses API Gateway for HTTP endpoints

# Data source for Step Functions
data "terraform_remote_state" "api_step_functions" {
  backend = "s3"
  # This will be auto-generated by Envie
}

variable "api_name" {
  description = "Name of the API Gateway"
  type        = string
  default     = "example-api"
}

# API Gateway
resource "aws_api_gateway_rest_api" "api" {
  name        = "${var.api_name}-${random_id.api_id.hex}"
  description = "Example API Gateway"

  endpoint_configuration {
    types = ["REGIONAL"]
  }

  tags = {
    Name        = "example-api"
    Environment = "ephemeral"
    Service     = "api"
    Module      = "gateway"
  }
}

# Random ID for uniqueness
resource "random_id" "api_id" {
  byte_length = 4
}

# API Gateway resource
resource "aws_api_gateway_resource" "proxy" {
  rest_api_id = aws_api_gateway_rest_api.api.id
  parent_id   = aws_api_gateway_rest_api.api.root_resource_id
  path_part   = "{proxy+}"
}

# API Gateway method
resource "aws_api_gateway_method" "proxy" {
  rest_api_id   = aws_api_gateway_rest_api.api.id
  resource_id   = aws_api_gateway_resource.proxy.id
  http_method   = "ANY"
  authorization = "NONE"
}

# API Gateway integration
resource "aws_api_gateway_integration" "proxy" {
  rest_api_id = aws_api_gateway_rest_api.api.id
  resource_id = aws_api_gateway_resource.proxy.id
  http_method = aws_api_gateway_method.proxy.http_method

  integration_http_method = "POST"
  type                   = "AWS"
  uri                    = "arn:aws:apigateway:eu-west-1:states:action/StartExecution"
  
  request_templates = {
    "application/json" = jsonencode({
      stateMachineArn = data.terraform_remote_state.api_step_functions.outputs.state_machine_arn
      input = jsonencode({
        httpMethod = "$context.httpMethod"
        path = "$context.path"
        body = "$input.body"
      })
    })
  })
}

# API Gateway deployment
resource "aws_api_gateway_deployment" "api" {
  depends_on = [
    aws_api_gateway_integration.proxy,
  ]

  rest_api_id = aws_api_gateway_rest_api.api.id
  stage_name  = "dev"

  lifecycle {
    create_before_destroy = true
  }
}

# Outputs
output "api_id" {
  description = "ID of the API Gateway"
  value       = aws_api_gateway_rest_api.api.id
}

output "api_arn" {
  description = "ARN of the API Gateway"
  value       = aws_api_gateway_rest_api.api.arn
}

output "api_url" {
  description = "URL of the API Gateway"
  value       = "https://${aws_api_gateway_rest_api.api.id}.execute-api.eu-west-1.amazonaws.com/${aws_api_gateway_deployment.api.stage_name}"
}

output "api_stage_name" {
  description = "Stage name of the API Gateway"
  value       = aws_api_gateway_deployment.api.stage_name
}
