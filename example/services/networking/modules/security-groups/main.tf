# Security Groups Module - Lightweight Version
# Uses null resources for fast deployment

# Data source for VPC
data "terraform_remote_state" "vpc" {
  backend = "s3"
  # This will be auto-generated by Envie
}

# Simulate Web Security Group
resource "null_resource" "web_sg" {
  depends_on = [data.terraform_remote_state.vpc]

  triggers = {
    vpc_id = data.terraform_remote_state.vpc.outputs.vpc_id
  }

  provisioner "local-exec" {
    command = "echo 'Web security group created'"
  }
}

# Simulate Database Security Group
resource "null_resource" "database_sg" {
  depends_on = [null_resource.web_sg]

  triggers = {
    vpc_id = data.terraform_remote_state.vpc.outputs.vpc_id
  }

  provisioner "local-exec" {
    command = "echo 'Database security group created'"
  }
}

# Simulate Lambda Security Group
resource "null_resource" "lambda_sg" {
  depends_on = [data.terraform_remote_state.vpc]

  triggers = {
    vpc_id = data.terraform_remote_state.vpc.outputs.vpc_id
  }

  provisioner "local-exec" {
    command = "echo 'Lambda security group created'"
  }
}

# Outputs
output "web_security_group_id" {
  description = "ID of the web security group"
  value       = "sg-web-${substr(sha256(data.terraform_remote_state.vpc.outputs.vpc_id), 0, 8)}"
}

output "database_security_group_id" {
  description = "ID of the database security group"
  value       = "sg-database-${substr(sha256(data.terraform_remote_state.vpc.outputs.vpc_id), 0, 8)}"
}

output "lambda_security_group_id" {
  description = "ID of the lambda security group"
  value       = "sg-lambda-${substr(sha256(data.terraform_remote_state.vpc.outputs.vpc_id), 0, 8)}"
}

output "security_group_id" {
  description = "ID of the web security group (alias)"
  value       = "sg-web-${substr(sha256(data.terraform_remote_state.vpc.outputs.vpc_id), 0, 8)}"
}